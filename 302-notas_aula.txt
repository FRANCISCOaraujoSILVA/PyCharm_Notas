---------------------------------------------------NOTAS DE AULAS-------------------------------------------------------

- i = i + 1 == i+=1
- Todos os dados recebidos via input são string. Cuidado ao trabalhar com elas.
- Se o dado é recebido via input, posso manipulá-los ou concatená-los. Mas posso fazer isso de várias formas também.
- cast: conversão de um tipo de dado em outro.
- valor//valor: obtém número inteiro. Modo pythônico de trabalhar.
- valor % valor: obtém o resto da divisão.
- Perdemos precisão ao transformar um dado tipo float - isso é bastante óbvio.
- É possível fazer várias atribuições ao mesmo tempo.
- Variáveis globais e variáveis locais.
- Ter vários if não é legal, pode poluir nossos códigos.
- replace: troca uma dado por outro.
- ctrl+clic
- float: transforma em ponto flutuante, que é um número real
- split: transforma uma string em uma lista
- print(parâmetro, end=' ', ): faz com que as impressões sejam feitas na mesma linha, com uma escolha de divisores
- enumerate: cria o índice -> for dado in enumerate(nome):  # Retorna o índice e valor de uma string, por exemplo
lembrar que dentro do laço for posso printar tanto o índice queando o valor
- rápida criação de lista: lista = list(range(12))
- o loop while se repete enquanto a expressão boolena for verdadeira
- o critério de parada "break" é tanto para a laço for quando o loop while
- abaixo foi um jeito de fazer duas análises em linhas diferentes. Pode ser muito útil. Pra esse caso é válido
for i in lista:
    if i > 0:
        if i % 2 == 0:
- numeros = list(range(0, int(input("Insira um valor para que uma lista seja criada de 0 até e o índice:"))))
- split(): transforma uma string em lista a partir de um separador pré-especificado
- print(1 in tupla11)




- Dúvidas: o que seria a expressão do while?






Seção 3
1-PEP8
2-dir_e_help
3-recebendo_dados_do_usuario

Seção 4
4-Tipo_numerico
5-Tipo_float
6-Tipo_booleano
7-Tipo_string
8-escopo_variavies

seção 5
9-condicionais_if_else_elif
10-condicionais_and_or_not_is

seção 6
11-loop_for
12-Entendendo_e_explorando_ranges
13-loop_while
14-saido_de_loops_com_breaK

seção 7
15-listas
16-tuplas
17-Dicionarios
18-mapas
19-conjuntos
20-mc_counter
21-mc_defaultDict
22-mc_orderedDict
23-mc_namedTuple
24-mc_deque

seção 8
25-definindo_funcoes
26-funcoes_com_retorno
27-funcoes_com_parametros
28-funcoes_com_parametro_padrao
29-docstrings
30-args
31-kwargs

seção 9
32-list_comprehension_1
33-list_comprehension_2
34-listas_aninhadas
35-dictionary_comprehension
36-set_comprehension

seção 10
37-lambdas
38-map
39-filter
40-reduce
41-Any_All
42-generators
43-sorted
44-min_e_max
45
46
47

seção 11
48
49
50
51
52

seção 12
53
54
55
56
57
58

seção 13
59-leitura_de_arquivos
60-seek_e_cursors
61-bloco_with
62-escrevendo_em_arquivos
63-modos_abertura_arquivo
64-stringIO
